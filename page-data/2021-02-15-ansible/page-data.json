{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021-02-15-ansible/","result":{"data":{"site":{"siteMetadata":{"title":"Capitanfuturo"}},"markdownRemark":{"id":"ebad2215-c60e-5d7e-8516-83d99f0505ef","excerpt":"ðŸ’» Introduzione Ansible Ã¨ un prodotto Open Source di RedHat che permette di automatizzare la configurazione di server Linux like e Window. In questo breve postâ€¦","html":"<h2>ðŸ’» Introduzione</h2>\n<p>Ansible Ã¨ un prodotto Open Source di RedHat che permette di automatizzare la configurazione di server Linux like e Window. In questo breve post proverÃ² a riassumere i concetti salienti per iniziarlo ad usare in modo produttivo.</p>\n<p>Lâ€™architettura di base consiste in una macchina controllore (dove viene eseguito ansible) e i nodi target.</p>\n<p>Per la comunicazione ci si basa su SSH mentre i prerequisiti per la macchina controllore sono aver installato python, pip ed ansible.</p>\n<p>In questa pagina ho cercato di riassumere i concetti base del prodotto.</p>\n<h2>Teoria</h2>\n<ul>\n<li>Ansible si puÃ² paragonare ad un manager di macchine a stati per server Linux e Windows. Permette di dichiarare con del codice lo stato che si vuole impostare ad un server.</li>\n<li>Realizza un modo per ottenere la <strong>Configuration as code</strong></li>\n<li>Permette di automatizzare task complessi e comuni.</li>\n</ul>\n<h3>Cosa vuole risolvere</h3>\n<ul>\n<li>Evitare errori umani</li>\n<li>Rendere la configurazione trasparente</li>\n<li>Rendere la configurazione ripetibile e deterministica</li>\n<li><strong>Documentare la configurazione dal codice stesso</strong></li>\n<li><strong>Rendere la configurazione portabile</strong></li>\n<li>Ridurre il tempo di configurazione</li>\n</ul>\n<h2>Installazione</h2>\n<p>Per poter installare sulla macchina di controllo ansible serve avere <strong>python3</strong> e <strong>pip3</strong> installato nel proprio sistema</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> python3-pip\npip <span class=\"token function\">install</span> ansible\nansible <span class=\"token parameter variable\">--version</span></code></pre></div>\n<h3>Creazione di una chiave ssh</h3>\n<p>La chiave ssh ci permette di accedere in maniera controllata al server privato in cloud o on premise che vogliamo configurare. Questo Ã¨ il prerequisito per eseguire ansible. Creaiamo una chiave con il comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ssh-keygen <span class=\"token parameter variable\">-f</span> ~/.ssh/nomefile</code></pre></div>\n<p>scegliamo il percorso e il nome file e una passphrase. Ora Ã¨ possibile vedere la chiave pubblica con un semplice</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token environment constant\">$HOME</span>/.ssh/nomefile.pub</code></pre></div>\n<h3>Installazione della chiave nel server target</h3>\n<p>Per installare la chiave ssh appena creata nel server target usiamo il comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ssh-copy-id <span class=\"token parameter variable\">-i</span> ~/.ssh/nomefile.pub user@host</code></pre></div>\n<h3>Test della nuova chiave SSH</h3>\n<p>Possiamo provare la chiave appena installata con il comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-i</span> ~/.ssh/nomefile user@host</code></pre></div>\n<h2>System inventory</h2>\n<p>Un inventory Ansbile:</p>\n<ul>\n<li>contiene tutti gli indirizzi dei server (hostnames o IP)</li>\n<li>si possono usare dei gruppi per organizzare i server da gestire con Ansible</li>\n<li>puÃ² essere un file statico o provisionato da linea di comando o dinamicamente con API</li>\n</ul>\n<p>es INI file <strong>inventory.ini</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">webservers</span><span class=\"token punctuation\">]</span></span> #&lt;- GROUP 1\n104.248.97.73\n104.248.97.74\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">databases</span><span class=\"token punctuation\">]</span></span> #&lt;- GROUP 2\n104.248.97.75</code></pre></div>\n<p>ma possiamo usare anche file yaml</p>\n<h3>Test del file inventory.ini</h3>\n<p>Adesso possiamo usarlo per eseguire un ping a tutti i server con ansible</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible <span class=\"token parameter variable\">-i</span> inventory.ini <span class=\"token parameter variable\">-u</span> root <span class=\"token parameter variable\">-m</span> <span class=\"token function\">ping</span> all</code></pre></div>\n<p>dove:</p>\n<ul>\n<li>-u user di login</li>\n<li>-m module</li>\n<li>all per tutti i gruppi</li>\n</ul>\n<h2>Ad-hoc commands</h2>\n<p>Il ping Ã¨ solo uno dei comandi che possiamo usare. In generale questi comandi che eseguono un compito atomico vengono chiamati comandi ad hoc o <strong>moduli</strong> e possono servire per:</p>\n<ul>\n<li>Riavviare i server</li>\n<li>Gestire file</li>\n<li>Gestire pacchetti</li>\n<li>Gestire utenti e gruppi</li>\n<li>Gestire servizi</li>\n<li>Raccogliere informazioni</li>\n</ul>\n<h3>Creare un utente Linux con il comando user</h3>\n<p>Uno dei comandi ad hoc Ã¨ il modulo user che serve per creare delle utenze.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible <span class=\"token parameter variable\">-i</span> inventory.ini <span class=\"token parameter variable\">-u</span> root <span class=\"token parameter variable\">-m</span> user <span class=\"token parameter variable\">-a</span> <span class=\"token string\">\"name=capitanfuturo state=present\"</span> all</code></pre></div>\n<p>dove:</p>\n<ul>\n<li>-a per gli argomenti</li>\n<li>state present per creare, absent per eliminare</li>\n</ul>\n<h3>Installare un package</h3>\n<p>modulo package per installere dei pacchetti</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible <span class=\"token parameter variable\">-i</span> inventory.ini <span class=\"token parameter variable\">-u</span> root <span class=\"token parameter variable\">-m</span> package <span class=\"token parameter variable\">-a</span> <span class=\"token string\">\"name=nginx state=present\"</span> webserver</code></pre></div>\n<h2>Playbook</h2>\n<p>Il playbook Ã¨ come un linguaggio <strong>dichiaritivo</strong> della <strong>configurazione</strong>, <strong>installazione</strong> e <strong>orchestrazione</strong> di Ansible.</p>\n<p>Riprendendo la guida ufficiale:</p>\n<p><em>se i moduli sono gli strumenti, i playbook sono i manuali di istruzioni e lâ€™inventory elencano i materiali grezzi gli host.</em></p>\n<p>le caratterisctiche pricipali sono quindi:</p>\n<ul>\n<li>flessibilitÃ </li>\n<li>possono essere innestati</li>\n<li>Ã¨ una collezione di azioni, <strong>Plays</strong>, che sono a loro volta una collezione di <strong>Task</strong> che eseguono <strong>moduli</strong> (vedi i comandi ad hoc)</li>\n<li>documenta la configurazione di un server in modo dichiarativo</li>\n</ul>\n<p>Per iniziare a scrivere un playbook creiamo un file <strong>master.yml</strong>. Come abbiamo scritto prima un playbook Ã¨ una collezione di Plays che contiene task. Di seguito un esempio:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CONFIGURA WEBSERVER <span class=\"token comment\"># &lt;- si vedrÃ  in console per il plays</span>\n  <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> webservers <span class=\"token comment\"># &lt;- vedasi i gruppi in inventory.ini</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Crea un utente non root <span class=\"token comment\"># &lt;- si vedrÃ  in console per il task</span>\n      <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># &lt;--- vedasi i moduli dei comandi ad-hoc</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> capitanfuturo\n      <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> present\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Installa nginx\n      <span class=\"token key atrule\">package</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n      <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> present</code></pre></div>\n<p>per eseguire il playbook eseguiamo il comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-playbook master.yml <span class=\"token parameter variable\">-i</span> inventory.ini <span class=\"token parameter variable\">-u</span> root</code></pre></div>\n<p>una volta eseguito potremmo vedere il risultato dellâ€™esecuzione nella sezione <em>PLAY RECAP</em>.</p>\n<h2>Ruoli</h2>\n<p>Un ruolo in Ansible Ã¨ un pezzo di codice rieseguibile. Possiamo immaginarlo come un <strong>package</strong> di playbooks e configurazione che dovrebbe gestire una sola cosa, per un solo obiettivo.</p>\n<p>Questo lo rende molto <strong>portabile</strong> e <strong>riusabile</strong> in diversi progetti di configuration as a code.</p>\n<p>Essendo dichiaritivo e sotto forma di codice Ã¨ anche versionabile</p>\n<p>Vediamo per esempio la struttura del ruolo <em>common</em>. Il ruolo piÃ¹ usato</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">roles/\n\tcommon/\n\t\ttasks/\n\t\thandlers/\n\t\tfiles/\n\t\ttemplates/\n\t\tvars/\n\t\tdefaults/\n\t\tmeta/</code></pre></div>\n<p>Alcune directory sono obbligatorie:</p>\n<ul>\n<li>tasks</li>\n<li>defaults</li>\n<li>meta</li>\n</ul>\n<p>mentre le altre sono opzionali.</p>\n<p>Nella cartella tasks si possono scrivere tutti i playbook che si vogliono e che verranno eseguiti.</p>\n<p>I ruoli possono essere pubblicati in un repository pubblico come per esempio <strong>Ansible galaxy</strong></p>\n<h3>Defaults</h3>\n<p>In defaults possiamo dichiare le varibili di default per il nostro role. Il file si chiama main.yaml ed Ã¨ sttutturato come tale. Proviamo ad esempio a dichiare una lista di utenti:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">users</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> pippo\n    <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> present\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> pluto\n    <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> present\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> paperino\n    <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> absent</code></pre></div>\n<h3>Tasks</h3>\n<p>Nella cartella tasks possiamo mettere i nostri playbook, la cosa interessante Ã¨ che possiamo richiamare le variabili della direcotry dei defaults attraverso la sintassi del motore di template di python <a href=\"https://jinja.palletsprojects.com/\">Jinjia</a> come nellâ€™esempio seguente per il solito file main.yaml:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Gestione utenti\n  <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>% raw\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"{{ item.username }}\"</span>\n  <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"{{ item.state }}\"</span>\n  <span class=\"token key atrule\">loop</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"{{ users }}\"</span> <span class=\"token comment\"># &lt;- cicla sull'array users dei defaults</span>\n  <span class=\"token punctuation\">{</span>% endraw</code></pre></div>\n<h3>Uso dei ruoli nel playbook</h3>\n<p>Per usare un ruolo ein un playbook si usa la chiave <strong><em>roles</em> che deve sempre essere scritta prima dei tasks</strong>. Prendendo lâ€™esempio precedente e immaginando di aver creato un ruolo chiamato users per la gestione degli utenti possiamo scrivere quanto segue:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CONFIGURA WEBSERVER <span class=\"token comment\"># &lt;- si vedrÃ  in console per il plays</span>\n  <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> webservers <span class=\"token comment\"># &lt;- vedasi i gruppi in inventory.ini</span>\n  <span class=\"token key atrule\">roles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> users\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Installa nginx\n      <span class=\"token key atrule\">package</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n      <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> present</code></pre></div>\n<h2>Variabili, Condizioni booleane e cicli</h2>\n<p>Alcuni dei costrutti piÃ¹ comuni nei linguaggi di programmazione sono disponibili anche in Ansible.</p>\n<h3>Variabili</h3>\n<p>Se vogliamo dichiarare delle varibili come visto per i default possiamo farlo direttamente nel playbook. La dichiarazione va fatta sotto la sezione <em>vars</em> e poi puÃ² essere usata per esempio nella sezione <em>tasks</em> come segue:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CONFIGURA WEBSERVER\n  <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> webservers\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Hello World\"</span> <span class=\"token comment\"># &lt;- valore scalare, (chiave, valore)</span>\n    <span class=\"token key atrule\">mylist</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># &lt;- lista numerica</span>\n    <span class=\"token key atrule\">myliststr</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># &lt;- lista di stringhe</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"Hello\"</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"World\"</span>\n    <span class=\"token key atrule\">mymap</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># &lt;- mappa</span>\n      <span class=\"token key atrule\">uno</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"hello\"</span>\n      <span class=\"token key atrule\">due</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"world\"</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>% raw\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"message: {{ message }}\"</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"mylist: {{ mylist }}\"</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"myliststr: {{ mylist1 }}\"</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"myliststr: {{ mymap.uno }} {{ mymap.due }}\"</span>\n    <span class=\"token punctuation\">{</span>% endraw</code></pre></div>\n<h3>Condizioni</h3>\n<p>Ansible permette di eseguire dei task a fronte di alcune condizioni. Per farlo possiamo usare la keyword <em>when</em> come nellâ€™esempio che segue.</p>\n<p>Altri operatori sono:</p>\n<ul>\n<li><em>not</em> per negare una condizione</li>\n<li><em>and</em> inteso come AND logico</li>\n<li><em>or</em> inteso come OR logico</li>\n</ul>\n<p>Per scrivere condizioni complesse si possono usare le <em>parentesi</em> come si usa normalmente in un linguaggio di programmazione.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CONFIGURA WEBSERVER\n  <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> webservers\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runTask</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">mylist</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Go go go!\"</span>\n      <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> runTask\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">dbug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Do not run\"</span>\n      <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> not runtask</code></pre></div>\n<h4>AND come elenco di condizioni</h4>\n<p>Eâ€™ possibile usare un elenco di condizioni che verranno considerate di default come degli AND:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CONFIGURA WEBSERVER\n  <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> webservers\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runTask</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">mylist</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Go go go!\"</span>\n      <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> runTask\n        <span class=\"token punctuation\">-</span> mylist<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> == true</code></pre></div>\n<h4>OR come elenco di condizioni</h4>\n<p>Eâ€™ possibile usare un elenco di condizioni ma affinchÃ¨ siano valutate come OR dobbiamo scrivere le condizioni come segue:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CONFIGURA WEBSERVER\n  <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> webservers\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runTask</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">mylist</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Go go go!\"</span>\n      <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> runTask\n        <span class=\"token punctuation\">-</span> or <span class=\"token comment\"># &lt;- Dobbiamo aggiungere qui un OR logico</span>\n        <span class=\"token punctuation\">-</span> mylist<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> == true</code></pre></div>\n<h2>Cicli, Loop</h2>\n<p>Dalla versione 2.5 Ã¨ disponibile la keyword <em>loop</em> usato per semplici cicli. Esiste anche la keyword <em>with_items</em> ma per la maggior parte dei casi basterÃ  il loop.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CONFIGURA WEBSERVER\n  <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> webservers\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">mylist</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">mymaplist</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n        <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> a\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n        <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> b\n    <span class=\"token key atrule\">myobject</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> capitanfuturo\n      <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">39</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Go list {{item}}\"</span>\n      <span class=\"token key atrule\">loop</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"{{ mylist }}\"</span> <span class=\"token comment\"># &lt;- allo stesso livello del nome del modulo</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Go map list values: {{item.value}}\"</span>\n      <span class=\"token key atrule\">loop</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"{{ mymaplist }}\"</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Go obj properties {{item}}\"</span>\n      <span class=\"token key atrule\">loop</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"{{ myobject|dict2items }}\"</span> <span class=\"token comment\"># &lt;- converte le property in mappe (chiave,valore)</span></code></pre></div>\n<h2>Tags</h2>\n<p>I tags sono molto utili a livello di Task, e possono essere usati per selezionare quale task eseguire.</p>\n<p>I tags vengono dichiarati con la keyword <em>tags</em> e va inserita alla fine del task da raggruppare.</p>\n<p>Tutti i task con lo stesso tag vengono raggruppati logicamente.</p>\n<p>Per eseguire un tag il comando Ã¨:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-playbook master.yml <span class=\"token parameter variable\">-i</span> inventory.ini <span class=\"token parameter variable\">-u</span> root <span class=\"token parameter variable\">--tags</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>nome del tag<span class=\"token operator\">></span></code></pre></div>\n<p>Per non eseguire un tag il comando Ã¨</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-playbook master.yml <span class=\"token parameter variable\">-i</span> inventory.ini <span class=\"token parameter variable\">-u</span> root --skip-tags<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>nome del tag<span class=\"token operator\">></span></code></pre></div>\n<h2>Ansible Galaxy</h2>\n<p>Ansible Galaxy Ã¨ un HUB, un registry dove trovare dei ruoli utili per costruire la propria configurazione as code: <a href=\"https://galaxy.ansible.com/\">https://galaxy.ansible.com/</a></p>\n<p>Per usare un ruolo il comando da usare Ã¨:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-galaxy <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>nome del ruolo<span class=\"token operator\">></span></code></pre></div>\n<p>Di default ansible installa i ruoli in <em>/etc/ansible/roles</em> che richiede permesso di root per poter scrivere. Se si vuole sofrascrivere questo comportamento si puÃ² usare il flag <strong>â€”roles-path</strong> oppure la variabile di ambiente <strong>ANSIBLE_ROLES_PATH</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-galaxy <span class=\"token function\">install</span> --roles-path ~/ansible-roles <span class=\"token operator\">&lt;</span>nome del ruolo<span class=\"token operator\">></span></code></pre></div>\n<h3>Dichiarazione delle dipendenze</h3>\n<p>Un buon metodo per descrivere le dipendenze ai ruoli in ansible galaxy Ã¨ lâ€™udo del file <strong>requirements.yml</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-galaxy <span class=\"token function\">install</span> <span class=\"token parameter variable\">-r</span> requirements.yml</code></pre></div>\n<p>un esempio di file Ã¨:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">src</span><span class=\"token punctuation\">:</span> yatesr.timezone\n\n<span class=\"token comment\"># from GitHub</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">src</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/bennojoy/nginx\n\n<span class=\"token comment\"># from GitHub, overriding the name and specifying a specific tag</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">src</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/bennojoy/nginx\n  <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> master\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx_role\n\n<span class=\"token comment\"># from a webserver, where the role is packaged in a tar.gz</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">src</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//some.webserver.example.com/files/master.tar.gz\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">-</span>role</code></pre></div>\n<h2>Conclusione</h2>\n<p>Ansible Ã¨ uno dei taselli che possiamo usare per relaizzare i processi di dev-ops in azienda. Ci puÃ² aiutare in qui contesti nei quali ci Ã¨ utile installare nuovi nodi della nostra architettura in maniera controllata e dichiarativa. Questa pagina non Ã¨ altro che un blocco note e non pretende di essere esaustiva ma un punto di partenza per imparare sempre di piÃ¹ ad usare questo strumento.</p>\n<h2>Links</h2>\n<ul>\n<li><a href=\"https://www.ansible.com/\">https://www.ansible.com/</a></li>\n<li><a href=\"https://galaxy.ansible.com/\">https://galaxy.ansible.com/</a></li>\n<li><a href=\"https://jinja.palletsprojects.com/en/2.11.x/\">https://jinja.palletsprojects.com/en/2.11.x/</a></li>\n</ul>\n<blockquote>\n<p>La felicitÃ  si trova nel fare, non solo nel possedere. (Napoleon Hill).</p>\n</blockquote>","frontmatter":{"title":"Ansible, una breve guida","date":"15 February 2021","description":null,"tags":["ComputerScience"]}},"previous":{"fields":{"slug":"/2021-01-31-arduino-johnny-five/"},"frontmatter":{"title":"Arduino Nano e Johnny five"}},"next":{"fields":{"slug":"/2021-02-27-makefile-e-devops/"},"frontmatter":{"title":"Makefile e DevOps, una breve guida"}}},"pageContext":{"id":"ebad2215-c60e-5d7e-8516-83d99f0505ef","previousPostId":"cd23d9a3-5aa4-56a2-a3a7-bb14b64d1867","nextPostId":"f56c0db8-5442-5f53-bd2f-faf5d0ae8381"}},"staticQueryHashes":["2114561082"],"slicesMap":{}}