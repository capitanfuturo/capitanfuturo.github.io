{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023-05-01-scrum-the-art/","result":{"data":{"site":{"siteMetadata":{"title":"Capitanfuturo"}},"markdownRemark":{"id":"132ecdde-45b8-557a-b4e0-a673fd1e0963","excerpt":"üìö Introduzione A quasi 4 anni dalla certificazione come Scrum Master e consigliato da un collega che ricopre questo ruolo da diversi anni ho deciso di leggere‚Ä¶","html":"<h2>üìö Introduzione</h2>\n<p>A quasi 4 anni dalla certificazione come Scrum Master e consigliato da un collega che ricopre questo ruolo da diversi anni ho deciso di leggere questo libro scritto a quattro mani da uno dei creatori del metodo Scrum e promotore del manifesto Agile.</p>\n<p>Il libro racconta di come l‚Äôautore in seguito ad alcuni vissuti ha costruito il framework Agile. Framework che ormai ha 30 anni ma che in Italia non √® ancora cos√¨ diffuso come ci si possa aspettare nell‚Äôindustry dello sviluppo software.</p>\n<p>Nel mio percorso lavorativo ho vissuto la maggior parte dei miei progetti con metodologia waterfall, vivendo sulla mia pella tutti i difetti di questo metodo che si applica bene per i progetti complicati ma con poca incertezza, a differenza dello sviluppo software per progetti custom che spesso sono molto incerti. Henry Gantt nel 1910 ha sviluppato il diagramma omonimo che √® diventato lo strumento principe della metodologia waterfall non sapendo quanti project manager e PMO avrebbero pianto su quei fogli sviluppando software‚Ä¶</p>\n<h2>üöÄ Cosa mi porto a casa da questa lettura</h2>\n<p>Per un dettaglio del framework Scrum penso che sia pi√π che esaustivo quanto scritto in <a href=\"../2019-12-16-psm-i-scrum-master\">PSM-I Certificazione Scrum Master livello 1</a>. Qua voglio appuntarmi alcuni spunti.</p>\n<ul>\n<li>\n<p>Quando si deve gestire molta <strong>incertezza</strong> √® meglio non pianificare tutto al dettaglio ma affrontare prima le cose che portano pi√π valore al cliente seguendo il <strong>principio di Pareto 80/20</strong>, 80% del valore si consegna con il 20% delle funzionalit√† richieste.</p>\n</li>\n<li>\n<p>Il team nel suo complesso √® il vero motore dello sviluppo. Solo in team si pu√≤ costruire l‚Äôambiente per il <strong>miglioramento continuo</strong> di ogni individuo. Il team deve essere <strong>cross funzionale</strong> e accrescere le proprie compentenze se necessario. Le caratteristiche sono:</p>\n<ul>\n<li>Transcendent</li>\n<li>Autonomous</li>\n<li>Cross-Functional</li>\n</ul>\n</li>\n<li>\n<p>Non indovinare cosa fare ma applica alla base il <strong>ciclo di Deming PCDA</strong>:</p>\n<ul>\n<li>Plan</li>\n<li>Do</li>\n<li>Check</li>\n<li>Act</li>\n</ul>\n</li>\n<li>\n<p>Il lavoro dovrebbe piacere e dovrebbe essere espressione di un obiettivo pi√π grande. La <strong>felicit√† nel lavoro</strong> rende le scelte pi√π facili e le soluzioni dove necessario pi√π creative.</p>\n</li>\n<li>\n<p>Ispeziona il lavoro, rendilo <strong>trasparente</strong>, adattalo al <strong>cambiamento</strong> se √® il valore che guida.</p>\n</li>\n<li>\n<p><strong>Fallisci velocemente</strong> cos√¨ puoi recuperare in tempo. Il tempo √® una risorsa finita e non va sprecato. Procedi per <strong>sprint time boxed</strong> e fa una cosa alla volta e falla subito giusta.</p>\n</li>\n<li>\n<p>Pianifica cose realizzabili e raggiungibili. <strong>Pianifica solo quello che serve</strong>. Non pianificare anni avvenire, concentrati sul breve periodo e alimenta il backlog.</p>\n</li>\n<li>\n<p>Lo spreco √® un crimine:</p>\n<ul>\n<li><strong>Muri</strong> ‚Äì waste through unreasonableness</li>\n<li><strong>Mura</strong> ‚Äì waste through inconsistency</li>\n<li><strong>Muda</strong> ‚Äì waste through outcomes</li>\n</ul>\n</li>\n<li>\n<p>Completare un task a met√† e non averlo completato affatto.</p>\n</li>\n<li>\n<p>Scrivi le <strong>user stories</strong>. Le narrazioni raccontano meglio le funzionalit√†: As an X, I want Y, so that Z.</p>\n</li>\n</ul>\n<h3>Come partire da zero 101</h3>\n<p>Questo il processo base per partire in azienda con il framework:</p>\n<ol>\n<li>Identificare un Product Owner.</li>\n<li>Prendere un team.</li>\n<li>Identificare uno Scrum Master.</li>\n<li>Costruire e prioritizzare un Product Backlog.</li>\n<li>Rifinire e stimare a taglie il Product Backlog.</li>\n<li>Sprint Planning.</li>\n<li>Daily Stand-up or Daily Scrum.</li>\n<li>Sprint Review or Sprint Demo.</li>\n<li>Sprint Retrospective.</li>\n</ol>\n<h2>üç∑ Conclusione</h2>\n<p>Il libro mi √® piaciuto nel suo complesso e potrei consigliare di leggerlo prima di prepararsi alla certificazione o al mero studio del framework perch√® permette di capire e sentire l‚Äôentusiasmo e lo spirito con cui stato disegnato. Gli aneddoti sono molto interessanti e di sicuro immagino che nel 1995 questo modo di lavorare sia stato visto come dirrompente e assolutamente disruptive.\nDalla lettura mi porto a casa alcuni spunti che applicher√≤ a lavoro e di sicuro lo spirito di fondo del framework.</p>\n<h2>ü§ì Riferimento</h2>\n<p>Jeff Sutherland, Jeffrey Victor Sutherland, <em>Scrum: The Art of Doing Twice the Work in Half the Time</em>, Currency, 2014. <a href=\"https://www.amazon.it/Scrum-Doing-Twice-Work-English-ebook/dp/B00I52D6KQ/ref=tmm_kin_swatch_0?_encoding=UTF8&#x26;qid=&#x26;sr=\">Amazon</a>.</p>\n<blockquote>\n<p>‚ÄúWorking Too Hard Only Makes More Work.‚Äù (Jeff Sutherland)</p>\n</blockquote>","frontmatter":{"title":"Scrum: The Art of Doing Twice the Work in Half the Time. (Jeff Sutherland, Jeffrey Victor Sutherland)","date":"01 May 2023","description":null,"tags":["Libri"]}},"previous":{"fields":{"slug":"/2023-04-01-padre-ricco/"},"frontmatter":{"title":"Padre ricco padre povero. (Robert T. Kiyosaki)"}},"next":{"fields":{"slug":"/2023-06-01-homo-deus/"},"frontmatter":{"title":"Homo Deus (Harari)"}}},"pageContext":{"id":"132ecdde-45b8-557a-b4e0-a673fd1e0963","previousPostId":"07e298b7-dcee-541c-b80c-ee25e19f7e1b","nextPostId":"0dc8ff1f-98ea-5302-9fe9-babb319dc415"}},"staticQueryHashes":["2114561082"],"slicesMap":{}}